SETUP GITHUB
sudo apt-get install git
sudo add-apt-repository ppa:git-core/ppa
git config --global user.name HuyMatec
git config --global user.email tranhoanghuy02.11.2003@gmail.com
git config --global --list

LỆNH LẤY SSH KEY
ssh-keygen -t rsa -b 4096
cat tên đường dẫn public

CÀI ĐẶT Setup-Linux.git
git clone git@github.com:HuyMatec/Setup-Linux.git

FIX CONTROL BRIGHTNESS Pop!_OS
sudo kernelstub -a "acpi_backlight=native"

FIX CONTROL BRIGHTNESS Ubuntu
sudo nano /etc/default/grub
quiet splash pcie_aspm=force acpi_backlight=native
sudo update-grub

CÀI ĐẶT BÀN PHÍM TIẾNG VIỆT CHO MÁY
sudo add-apt-repository ppa:bamboo-engine/ibus-bamboo
sudo apt-get update
sudo apt-get install ibus-bamboo
ibus restart

SETUP ZSH SHELL
sudo apt install zsh
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

Vào Preferences Terminal đổi tên môi trường thành ZSH_Environment 
Vào Command đến Tích vào checkbox Run a custom command instead of my shell
Điền vào Custom command: /usr/bin/zsh
Clone từng gói 
git clone https://github.com/zsh-users/zsh-autosuggestions.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
git clone https://github.com/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10k
Đặt zsh làm mặc định
chsh -s $(which zsh)
SETUP MÔI TRƯỜNG ZSH SHELL TRONG FILE .zshrc
ZSH_THEME="powerlevel10k/powerlevel10k"
plugins=(git sudo history encode64 copypath zsh-autosuggestions zsh-syntax-highlighting)
Kiểm tra kĩ file xóa dòng plugins(git)
Theo thứ tự chọn y y y y 3 1 2 4 1 1 2 1 4 1 2 2 2 n 1 y 

SETUP FISH SHELL
sudo apt-get install fish
Đặt làm mặc định
chsh -s (command -s fish)
CÀI ĐẶT CURL & WATCHMAN
sudo apt-get install curl
sudo apt-get install watchman
sudo apt update
CÀI ĐẶT FISHER NVM LOGO_FISH
curl -sL https://raw.githubusercontent.com/jorgebucaran/fisher/main/functions/fisher.fish | source && fisher install jorgebucaran/fisher
fisher install jorgebucaran/nvm.fish
fisher install laughedelic/fish_logo
SETUP FISH ICON
fisher install IlanCosman/tide@v6
Theo thứ tự chọn số 3 2 2 1 3 1 4 1 1 2 2 1

CÀI ĐẶT VÀ ĐẶT MẶC ĐỊNH NVM
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
nvm install v18.18.0
nvm use v18.18.0
set --universal nvm_default_version v18.18.0
Coi version nvm
nvm ls-remote

CÀI ĐẶT YARN GLOBAL TRÊN MÁY
npm i --global yarn

CÀI ĐẶT BUN TRÊN MÁY
curl -fsSL https://bun.sh/install | bash

CÀI ĐẶT ANDROID_STUDIO
sudo add-apt-repository ppa:maarten-fonville/android-studio
sudo apt install android-studio -y

CÀI ĐẶT FLUTTER 
sudo snap install flutter --classic
flutter doctor --android-licenses
export PATH="$PATH:`pwd`/flutter/bin" => thêm vào file .zshrc

Cài đặt xong Android Studio thì thêm environment cho file .zshrc
export ANDROID_HOME=$HOME/Android/Sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/platform-tools

SETUP MÔI TRƯỜNG FISH SHELL TRONG FILE config.fish
sudo nano .config/fish/config.fish

fish_logo blue cyan green

if status is-interactive
    # Commands to run in interactive sessions can go here
end

function pokeshell
    cd /usr/local/bin/pokeshell
    npm start
end

# android-studio
set -gx ANDROID_HOME $HOME/Android/Sdk
set -x PATH $PATH $ANDROID_HOME/emulator
set -x PATH $PATH $ANDROID_HOME/platform-tools

# bun
set -gx BUN_INSTALL "$HOME/.bun"
set -gx PATH $BUN_INSTALL/bin $PATH

# flutter
set -gx FLUTTER_HOME "$HOME/flutter"
set -gx PATH $PATH $FLUTTER_HOME/bin

SETUP THEME
git clone https://github.com/vinceliuice/WhiteSur-gtk-theme.git
cd WhiteSur-gtk-theme/ && ls -lah && ./install.sh -t all -N glassy -s 220 && ls -lah *sh && sudo apt install gnome-tweaks

LỆNH LINUX
sudo dpkg --list | grep -i jdk
sudo apt-get remove --purge name_version
sudo apt-get autoremove

CÀI ĐẶT FILE CÓ ĐUÔI .deb
sudo dpkg -i <ten_file.deb>

CÀI ĐẶT DRIVER NVIDIA
nvidia-smi
sudo apt install nvidia-driver-545

CÀI ĐẶT POSTMAN
tar -xzf postman-agent-0.4.17-linux-x64.tar.gz
sudo mkdir -p /opt/apps/
sudo mv Postman /opt/apps/
sudo ln -s /opt/apps/Postman/Postman /usr/local/bin/postman
sudo nano /usr/share/applications/postman.desktop
[Desktop Entry]
Encoding=UTF-8
Name=Postman
Exec=/usr/local/bin/postman %U
Terminal=false
Type=Application
Icon=/home/huymatec2003/.icons/Cupertino-Ventura/apps/128/postman.png
Categories=Development;

CÀI ĐẶT FLIPPER
Link download: 
- https://github.com/facebook/flipper/releases/download/v0.239.0/Flipper-linux.zip
Link icon: 
- https://camo.githubusercontent.com/44d544229df4e3786e4c6743f54e25357a31a55c84674039f699aa12a0d9c605/68747470733a2f2f6662666c69707065722e636f6d2f696d672f69636f6e2e706e67
Di chuyển icon đến /home/huymatec2003/.icons/Cupertino-Ventura/apps/128 
Vào Download mở Terminal dùng lệnh: 
- mv flipper.png /home/huymatec2003/.icons/Cupertino-Ventura/apps/128/
sudo mv ~/Downloads/Flipper-linux /opt/flipper
sudo nano /usr/share/applications/flipper.desktop
[Desktop Entry]
Name=Flipper
Comment=Platform for debugging mobile apps on iOS and Android.
Exec=/opt/flipper/flipper
Terminal=false
Type=Application
Icon=/home/huymatec2003/.icons/Cupertino-Ventura/apps/128/flipper.png

FAN CONTROL ACER
git clone https://github.com/Jebaitedneko/Acer-Nitro-5-AN515-58-EC-Control-Linux
sudo bash nitrosense
ENA: [w]rite to ec
PWR: [q]uiet [d]efault [p]erformance
FAN: [a]uto  [c]ustom  [m]ax
DBG: [r]ead from ec
DBG: [e]nergy data from intel_rapl
DBG: [n]vidia-powerd restart

MENU FAN OPTIONS
Default Power with Auto Fan: sudo bash nitrosense da
Performance Power with Max Fan: sudo bash nitrosense pm
Performance Power with Custom Fan at 50%: sudo bash nitrosense pc 50

CÀI ĐẶT TOUCHEGG 
Vào Extension Manager install X11 Gesture
sudo add-apt-repository ppa:touchegg/stable
sudo apt update
sudo apt install touchegg
systemctl status touchegg.service

Setup Starship trên windows
    Cài đặt choco:
        Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

	choco install -y nodejs-lts openjdk11
    Cài đặt starship:
        choco install starship
    Setup môi trường starship
        Vào Documents chọn folder Powershell tạo 1 file tên là Microsoft.PowerShell_profile.ps1 

	Invoke-Expression (&starship init powershell)
    Tiếp theo mở lại Powershell7 lên lại 
        Paste lệnh mkdir -p ~/.config rồi vào đường dẫn này C:\Users\tên của máy\.config tạo 1 file starship.toml thêm cái này vào file đó
            [battery]
            full_symbol = "🔋"
            charging_symbol = "🔌"
            discharging_symbol = "⚡"

            [[battery.display]]
            threshold = 100
            style = "bold green"

            [cmd_duration]
            min_time = 10_000  # Show command duration over 10,000 milliseconds (=10 sec)
            format = " took [$duration]($style)"

            [directory]
            truncation_length = 5
            format = "[$path]($style)[$lock_symbol]($lock_style) "

            [git_branch]
            symbol = '🌱 '
            truncation_length = 4
            truncation_symbol = ''
            ignore_branches = ['master', 'main']

            [git_commit]
            commit_hash_length = 4
            tag_symbol = '🔖 '

            [git_status]
            conflicted = '🏳'
            ahead = '🏎💨'
            behind = '😰'
            diverged = '😵'
            up_to_date = '✓'
            untracked = '🤷'
            stashed = '📦'
            modified = '📝'
            staged = '[++\($count\)](green)'
            renamed = '👅'
            deleted = '🗑'

            [package]
            format = 'via [🎁 $version](208 bold) '

            [time]
            disabled = false
            use_12hr = false
            format = '🕙 [\[ $time \]]($style) '
            time_format = '%T'
            utc_time_offset = 'local'
            time_range = '-'

            [nodejs]
            format = 'via [🤖 $version](bold green) '
        
